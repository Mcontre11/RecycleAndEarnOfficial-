<%- include("partials/header") %>

<head>
  <link rel="stylesheet" href="other.css">
</head>
  <!DOCTYPE html>
  <html lang="en">
 
  <head>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      #map {
        height: 100%;
        width: 75%;
        margin-left: 15%;
      }
    </style>
  </head>

  
    <div id="map">
      <div>
        <h3> My Google Map</h3>
      </div>
    </div>

    ​

    ​
    <script>
      var options = {
        enableHighAccuracy: true,
        timeout: 5000,
        maximumAge: 0
      };
      
      function initMap() {
        function success(pos) {
          var crd = pos.coords;

          console.log('Your current position is:');
          console.log(`Latitude : ${crd.latitude}`);
          console.log(`Longitude: ${crd.longitude}`);
          console.log(`More or less ${crd.accuracy} meters.`);
          initMap0(crd.latitude, crd.longitude)
        }

        function error(err) {
          console.warn(`ERROR(${err.code}): ${err.message}`);
        }

        navigator.geolocation.getCurrentPosition(success, error, options);
      }
      //this functon is to calc he radius 
     
      function haversine_distance(lat1, lon1, lat2, lon2) {
      var R = 3958.8; // Radius of the Earth in miles
      var rlat1 = lat1 * (Math.PI/180); // Convert degrees to radians
      var rlat2 = lat2 * (Math.PI/180); // Convert degrees to radians
      var difflat = rlat2-rlat1; // Radian difference (latitudes)
      var difflon = (lon2 -lon1) * (Math.PI/180); // Radian difference (longitudes)
       // this is formulula to calc between 2 distances 
      var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.sin(difflon/2)*Math.sin(difflon/2)));
      return d;
      }
      // const to show radius KM to decide which locations are close enough to the user
      const radiusMiles = 5.0
     
      // lat and lng are users lattitude and long cordinates
      function initMap0(userLat, userLng) {
        let options = {
          zoom: 11,
          center: { lat: userLat, lng: userLng }
        }
        let map = new google.maps.Map(document.getElementById('map'), options)
        fetch('locations', {
          method: 'get',
          headers: { 'Content-Type': 'application/json' },
        })
          .then(response => {
            console.log('resp ' + response)
            if (response.ok) return response.json()
          })
          .then(data => {
            console.log(data)
            for (let j = 0; j < data.locations.length; j++) {
              let stationAddress = data.locations[j].address;
              let stationName = data.locations[j].QRcode;
              let queryAddress = stationAddress.split(' ').join('+')

              fetch(
                `https://maps.googleapis.com/maps/api/geocode/json?address=${queryAddress}&key=AIzaSyChzooPvmWzWzfK5O-m08fYRijT7XAwxVo`
              )
                .then(res => res.json())
                .then(function (result) {
                  console.log(result)
                  let locations = []
                  let lat = result.results[0].geometry.location.lat
                  let lng = result.results[0].geometry.location.lng
                  let howFar = haversine_distance (userLat, userLng, lat, lng)
                  if(howFar < radiusMiles){
                  let coords = [lat, lng]
                  locations.push(coords)
                  var infowindow = new google.maps.InfoWindow();
                  var marker, i;
                  for (i = 0; i < locations.length; i++) {
                    console.log(locations[i][0], locations[i][1])
                    marker = new google.maps.Marker({
                      position: new google.maps.LatLng(locations[i][0], locations[i][1]),
                      map: map,
                      mapTypeId: google.maps.MapTypeId.ROADMAP,
                      draggable: false,
                      title: "pin",
                      content: '<h1>Location</h1>'
                    });
                    google.maps.event.addListener(marker, 'click', (function (marker, i) {
                      return function () {
                        infowindow.setContent(
                          `<p>${stationName}</p> <img src="/img/${stationName}.png"></img>`
                        );
                        infowindow.open(map, marker);
                      }
                    })(marker, i));
                  }
                }
                });
            }

          })
      }
    </script>

    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChzooPvmWzWzfK5O-m08fYRijT7XAwxVo&channel=2&callback=initMap"
      async defer></script>
  

  </html>